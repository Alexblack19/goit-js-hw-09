{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAiBA,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAGpCC,EAAAP,GAASQ,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAGtEG,EAAAP,GAASQ,OAAOG,QAAQ,sBAAqCD,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,CAtBxDQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBAIF,IAHA,IAAMb,EAAWY,EAAEE,OAAOC,SAASd,MAAMe,MACnCf,EAAQW,EAAEE,OAAOC,SAASE,KAAKD,MAC/BE,EAASN,EAAEE,OAAOC,SAASG,OAAOF,MAC/BG,EAAI,EAAGA,GAAKC,OAAOF,GAASC,GAAK,EACxCpB,EAAcC,EAAUC,GAE1BW,EAAES,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["// all modules\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {  \n  e.preventDefault();  \n  const position = e.target.elements.delay.value;\n  const delay = e.target.elements.step.value;\n  const amount = e.target.elements.amount.value; \n  for (let i = 1; i <= Number(amount); i += 1) {\n    createPromise(position, delay);\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) { \n  const shouldResolve = Math.random() > 0.3; \n  if (shouldResolve) {\n    // Fulfill\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","$parcel$interopDefault","Notify","success","concat","failure","document","querySelector","addEventListener","e","preventDefault","target","elements","value","step","amount","i","Number","currentTarget","reset"],"version":3,"file":"03-promises.7f71cb89.js.map"}