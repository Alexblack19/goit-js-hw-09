{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAgCtC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,6CAERC,EAAO,yC,GAERH,E,IAzCPL,EAAOa,QAEPb,EAAOc,iBAAiB,SACxB,SAA4BC,GAC1B,IAAgCC,EAAAD,EAAEE,cAAcC,SAAxCC,EAAwBH,EAAxBX,MAAOe,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEnBC,OAAOH,EAAMI,OAAS,GACtBD,OAAOF,EAAKG,OAAS,GACrBD,OAAOD,EAAOE,OAAS,GAEvBC,EAAA1B,GAAS2B,OAAOC,QAAQ,6BACtB1B,EAAK2B,iBAAiBC,aAAa,WAAY,KAEjD5B,EAAO2B,iBAAiBE,gBAAgB,W,IAI5C7B,EAAOc,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEe,iBAKF,IAJA,IAAIX,EAAQG,OAAOP,EAAEgB,OAAOb,SAASb,MAAMkB,OACrCH,EAAOE,OAAOP,EAAEgB,OAAOb,SAASE,KAAKG,OACrCF,EAASC,OAAOP,EAAEgB,OAAOb,SAASG,OAAOE,OAEtCS,EAAW,EAAGA,GAAYX,EAAQW,GAAY,EACrD7B,EAAc6B,EAAUb,GACxBA,GAAgBC,C,IAkBpBjB,EAAcC,SAAUC,OACrB4B,MAAK,SAAAC,G,IAAGF,EAAQE,EAAR9B,SAAUe,EAAKe,EAAL7B,MACjBmB,EAAA1B,GAAS2B,OAAOU,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANjB,EAAM,M,IAEvEkB,OAAM,SAAAH,G,IAAGF,EAAQE,EAAR9B,SAAUe,EAAKe,EAAL7B,MAClBmB,EAAA1B,GAAS2B,OAAOC,QAAQ,sBAAqCU,OAAfJ,EAAS,QAAYI,OAANjB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["// all modules\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.reset();\n\nformEl.addEventListener('input', onVerifyValueInput);\nfunction onVerifyValueInput(e) {\n  const { delay, step, amount } = e.currentTarget.elements;\n  if (\n    Number(delay.value) < 0 ||\n    Number(step.value) < 0 ||\n    Number(amount.value) < 0\n  ) {\n    Notiflix.Notify.failure('❌ Values must be positive');\n    formEl.lastElementChild.setAttribute('disabled', '');\n  } else {\n    formEl.lastElementChild.removeAttribute('disabled');\n  }\n}\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delay = Number(e.target.elements.delay.value);\n  const step = Number(e.target.elements.step.value);\n  const amount = Number(e.target.elements.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay);\n    delay = delay + step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('Success! Value passed to resolve function');\n      } else {\n        reject('Error! Error passed to reject function');\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(position, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","reset","addEventListener","e","_elements","currentTarget","elements","_$delay","step","amount","Number","value","$parcel$interopDefault","Notify","failure","lastElementChild","setAttribute","removeAttribute","preventDefault","target","_$position","then","param","success","concat","catch"],"version":3,"file":"03-promises.eb3861bf.js.map"}