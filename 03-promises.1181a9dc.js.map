{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAiCtC,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAGpCC,EAAAV,GAASW,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAGtEG,EAAAV,GAASW,OAAOG,QAAQ,sBAAqCD,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,CAvCvEL,EAAOa,QAEPb,EAAOc,iBAAiB,SACxB,SAA4BC,GAC1B,IAAgCC,EAAAD,EAAEE,cAAcC,SAAxCb,EAAwBW,EAAxBX,MAAOc,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEnBC,OAAOhB,EAAMiB,OAAS,GACtBD,OAAOF,EAAKG,OAAS,GACrBD,OAAOD,EAAOE,OAAS,GAEvBd,EAAAV,GAASW,OAAOG,QAAQ,6BACtBZ,EAAKuB,iBAAiBC,aAAa,WAAY,KAEjDxB,EAAOuB,iBAAiBE,gBAAgB,W,IAI5CzB,EAAOc,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEW,iBAKF,IAJA,IAAIrB,EAAQgB,OAAON,EAAEY,OAAOT,SAASb,MAAMiB,OACrCH,EAAOE,OAAON,EAAEY,OAAOT,SAASC,KAAKG,OACrCF,EAASC,OAAON,EAAEY,OAAOT,SAASE,OAAOE,OAEtClB,EAAW,EAAGA,GAAYgB,EAAQhB,GAAY,EACrDwB,QAAQC,IAAIzB,EAASC,GACrByB,WAAW3B,EAAcC,EAAUC,GAAQA,GAC3CA,GAAgBc,C","sources":["src/js/03-promises.js"],"sourcesContent":["// all modules\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.reset();\n\nformEl.addEventListener('input', onVerifyValueInput);\nfunction onVerifyValueInput(e) {\n  const { delay, step, amount } = e.currentTarget.elements;\n  if (\n    Number(delay.value) < 0 ||\n    Number(step.value) < 0 ||\n    Number(amount.value) < 0\n  ) {\n    Notiflix.Notify.failure('❌ Values must be positive');\n    formEl.lastElementChild.setAttribute('disabled', '');\n  } else {\n    formEl.lastElementChild.removeAttribute('disabled');\n  }\n}\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delay = Number(e.target.elements.delay.value);\n  const step = Number(e.target.elements.step.value);\n  const amount = Number(e.target.elements.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    console.log(position,delay);\n    setTimeout(createPromise(position, delay), delay);\n    delay = delay + step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","$parcel$interopDefault","Notify","success","concat","failure","reset","addEventListener","e","_elements","currentTarget","elements","step","amount","Number","value","lastElementChild","setAttribute","removeAttribute","preventDefault","target","console","log","setTimeout"],"version":3,"file":"03-promises.1181a9dc.js.map"}